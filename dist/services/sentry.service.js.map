{"version":3,"file":"sentry.service.js","sourceRoot":"/","sources":["services/sentry.service.ts"],"names":[],"mappings":"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","sourcesContent":["import { Inject, Injectable, Logger, Optional } from '@nestjs/common';\nimport { Options, Client } from '@sentry/types';\nimport * as Sentry from '@sentry/node';\n\nimport { SENTRY_MODULE_OPTIONS } from '../common/sentry.constants';\nimport { SentryModuleOptions } from '../interfaces/sentry-options.interface';\n\nexport abstract class SentryBaseService extends Logger {}\n\n@Injectable()\nexport class SentryService extends Logger {\n    app: string = '@ntegral/nestjs-sentry: ';\n    constructor(\n        @Inject(SENTRY_MODULE_OPTIONS)\n        private readonly options?: SentryModuleOptions,\n        @Optional() prior?: SentryService\n      ) {\n        super();\n        if (!(options && options.dsn)) {\n          // console.log('options not found. Did you use SentryModule.forRoot?');\n          return;\n        }\n\n        Sentry.init({\n          dsn: options.dsn,\n          debug: options.debug === true ? false : options.debug,\n          environment: options.environment,\n          release: options.release,\n          logLevel: options.logLevel,\n          integrations: [\n            new Sentry.Integrations.OnUncaughtException({\n              onFatalError: async (err) => {\n                // console.error('uncaughtException, not cool!')\n                // console.error(err);\n                if (err.name === 'SentryError') {\n                  //ignore\n                } else {\n                  await (Sentry.getCurrentHub().getClient<Client<Options>>() as Client<Options>).captureException(err);\n                  process.exit(1);\n                }\n              },\n            }),\n            new Sentry.Integrations.OnUnhandledRejection()\n              //No callback he\n          ]\n        });\n      }\n\n  log(message: string, context?: string) {\n    message = `${this.app} ${message}`;\n    try {\n      Sentry.captureMessage(message, Sentry.Severity.Log);\n      super.log(message, context);\n    } catch (err) {\n      // console.error(message, err);\n    }\n  }\n\n  error(message: string, trace?: string, context?: string) {\n    message = `${this.app} ${message}`;\n    try {\n      Sentry.captureMessage(message, Sentry.Severity.Error);\n      super.error(message, trace, context);\n    } catch (err) {\n      // console.error(message, err);\n    }\n  }\n\n  warn(message: string, context?: string) {\n    message = `${this.app} ${message}`;\n    try {\n      Sentry.captureMessage(message, Sentry.Severity.Warning);\n      super.warn(message, context);\n    } catch (err) {\n      // console.error(message, err);\n    }\n  }\n\n  debug(message: string, context?: string) {\n    message = `${this.app} ${message}`;\n    try {\n      Sentry.captureMessage(message, Sentry.Severity.Debug);\n      super.debug(message, context);\n    } catch (err) {\n      // console.error(message, err);\n    }\n  }\n\n  verbose(message: string, context?: string) {\n    message = `${this.app} ${message}`;\n    try {\n      Sentry.captureMessage(message, Sentry.Severity.Info);\n      super.verbose(message, context);\n    } catch (err) { \n      // console.error(message, err); \n    }\n  }\n}"]}